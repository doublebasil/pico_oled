There's a bunch of places for the terminal code where the same thing gradients
calculated. For example, the calloc length is calculated in loads of places
Might be better to create a few more module scope variables? Or potentially
create a module scope struct pointer which is null when the terminal is not
initialised, and when the terminal is initialised it stores a bunch of init 
related info
: bytes per row
: calloc size
: font size
: font colour
: 
Actually, mallocing a struct sounds like a pain

Read through everything we already have and make sure all of the variable
types are suitable, and that the variable names makes sense. Currently, they
dont all make sense. Also make sure the comments are suitable

It's becomming a big file, so need more clear sections, e.g.
module scope variables, public functions, private functions, etc.
And separate more clearly into function subsets

Add round loading bar using bitmap. Need to use bitmap
else you get nasty flashing :(

Neaten the oled_test function, make the gradients use the display dimensions
in the calculations

Add QR generation

There are some methods that'd be more suitable than setPixel in the 
manufacturers code, which would be more efficient

Add image support

Add extra loading bar functions, so we'll have
oled_roundLoadingBarInit
oled_roundLoadingBarUpdate
oled_roundLoadingBarEnd
Init will malloc a bitmap, so that the update only has to update
the pixels that have changed
End will free the bitmap
Although, might be a bit over the top for a simple loading bar
And might have to malloc quite a bit of memory
By the time you've done all the bitwise operations with the bitmap
I'm not sure I'll be much better off in terms of speed
